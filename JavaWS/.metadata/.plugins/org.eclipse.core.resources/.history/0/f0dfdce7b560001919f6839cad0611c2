import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class Main {
	
	// uniqueWoodPieceLengths -> number of woods with this length
	private static Map<Integer, Integer> numWoodWithLength = new HashMap<Integer, Integer>();
	
	// uniqueBoardLengths -> number of boards with this height
	private static Map<Integer, Integer> numBoardsWithHeight = new HashMap<Integer, Integer>();
	
	public static void main(String[] args) throws Exception {
		
		BufferedReader jin = new BufferedReader(new InputStreamReader(System.in));

		
		getCountForEachLengthOfWood(jin);
		
		
		jin.close();
	}
	
	private static void getCountForEachLengthOfBoard() {
		
		Set<Integer> uselessSet = numWoodWithLength.keySet();
		int[] uniqueWoodLengths = uselessSet.toArray(new int[uselessSet.size()]);
		
		// compare each piece of wood against all others

		
	}
	
	private static void getCountForEachLengthOfWood(BufferedReader jin) throws Exception {
		int N = Integer.parseInt(jin.readLine());
		String[] toks = jin.readLine().split(" ");
		
		for (int i = 0; i < N; i++) {
			int woodLen = Integer.parseInt(toks[i]);
			
			if (numWoodWithLength.containsKey(woodLen)) {
				numWoodWithLength.put(woodLen, numWoodWithLength.get(woodLen) + 1);
			} 
			else {
				numWoodWithLength.put(woodLen, 1);
			}
		}
	}

}
