import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

class Station {
	public int numPassengers;
	public Station(int passengers) {
		this.numPassengers = passengers;
	}
}

class MLine {
	
	private int gcd(int a, int b) {
		return (b == 0) ? a : gcd(b, a % b);
	}
	
	private List<Station> stations = new ArrayList<Station>();
	public void addStation(Station station) {
		this.stations.add(station);
	}
	public void moveTrains() {
		int shift = 1;
		int len = stations.size();
		
		for (int i = 0; i < gcd(shift, len); i++) {
			int tmp = stations.get(i).numPassengers;
			int j = i;
			while (true) {
				int k = (j - shift) % len;
				if (k == i) {
					break;
				}
				stations.get(j).numPassengers = stations.get(k).numPassengers;
				j = k;
			}
			stations.get(j).numPassengers = tmp;
		}
		/*int len = stations.size();
		int a = stations.get(len - 1).numPassengers;
		for (int i = len - 1; i > 0; i--) {
			stations.get(i).numPassengers = stations.get(i - 1).numPassengers;
		}
		stations.get(0).numPassengers = a;*/
	}
}


public class Main {
	
	private static int N, M, Q;
	
	private static List<Station> stationRefs = new ArrayList<Station>();
	
	
	private static List<MLine> readInStructure(BufferedReader jin) throws Exception {
		
		String[] details = jin.readLine().split(" ");
		N = Integer.parseInt(details[0]); M = Integer.parseInt(details[1]); Q = Integer.parseInt(details[2]);
		
		List<MLine> lines = new ArrayList<MLine>(M);
		for (int i = 0; i < M; i++) {
			lines.add(new MLine());
		}
		
		String[] stationLines = jin.readLine().split(" ");
		String[] initialPassengers = jin.readLine().split(" ");
		for (int i = 0; i < N; i++) {
			int lineNum = Integer.parseInt(stationLines[i]);
			Station station = new Station(Integer.parseInt(initialPassengers[i]));
			stationRefs.add(station);
			lines.get(lineNum - 1).addStation(station); 
		}
		
		return lines;
	}
	

	public static void main(String[] args) throws Exception {
		
		BufferedReader jin = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();

		List<MLine> lines = readInStructure(jin);
		
		
		for (int i = 0; i < Q; i++) {
			String[] command = jin.readLine().split(" ");
			if (command.length == 3) { // survey
				// from l -> r
				int l = Integer.parseInt(command[1]), r = Integer.parseInt(command[2]);
				int total = 0;
				for (int j = l - 1; j <= r - 1; j++) {
					total += stationRefs.get(j).numPassengers;
				}
				sb.append(total);
				sb.append('\n');
			}
			else { // operate line
				int x = Integer.parseInt(command[1]);
				lines.get(x - 1).moveTrains();
			}
		}
		
		System.out.println(sb.toString());
		
		jin.close();
	}

}
